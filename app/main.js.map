{"version":3,"sources":["./src/app/experiencia/experiencia.component.ts","./src/app/experiencia/experiencia.component.html","./src/environments/environment.ts","./src/app/conocimientos/conocimientos.component.ts","./src/app/conocimientos/conocimientos.component.html","./src/app/estudios/estudios.component.ts","./src/app/estudios/estudios.component.html","./src/assets/js/print.js","./src/app/formulario/formulario.component.ts","./src/app/formulario/formulario.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/navigation/navigation.component.ts","./src/app/navigation/navigation.component.html","./src/app/data-formulario.service.ts","./src/app/personal/personal.component.ts","./src/app/personal/personal.component.html","./src/app/app-routing.module.ts","./src/app/cursos/cursos.component.ts","./src/app/cursos/cursos.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\n\n@Component({\n  selector: 'app-experiencia',\n  templateUrl: './experiencia.component.html',\n  styleUrls: ['./experiencia.component.scss']\n})\nexport class ExperienciaComponent implements OnInit {\n  dataSource = new MatTableDataSource<PeriodicElement>([]);\n  puesto: string = '';\n  empresa: string = '';\n  fechaInicio: Date | null = null;\n  fechaFin: Date | null = null;\n  actividades: string = '';\n\n  displayedColumns = ['puesto', 'empresa', 'fechaIni', 'fechaFin', 'actividades', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService) { }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarExperiencia(): void {\n    if (this.puesto && this.empresa && this.fechaInicio && this.fechaFin && this.actividades) {\n      const nuevaExperiencia: PeriodicElement = {\n        puesto: this.puesto,\n        empresa: this.empresa,\n        fechaIni: this.fechaInicio,\n        fechaFin: this.fechaFin,\n        actividades: this.actividades\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      console.log('dataSource.data después de agregar:', this.dataSource.data);\n      this.dataFormularioService.guardarExperiencias(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.puesto = '';\n    this.empresa = '';\n    this.fechaInicio = null;\n    this.fechaFin = null;\n    this.actividades = '';\n  }\n\n  eliminarElemento(elemento: PeriodicElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarExperiencias(this.dataSource.data);\n  }\n}\n\nexport interface PeriodicElement {\n  puesto: string;\n  empresa: string;\n  fechaIni: Date;\n  fechaFin: Date;\n  actividades: string;\n}\n","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">Experiencia Laboral</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>Puesto</mat-label>\n            <input matInput placeholder=\"Puesto\" name=\"puesto\" required [(ngModel)]=\"puesto\">\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>Empresa</mat-label>\n            <input matInput placeholder=\"Empresa\" name=\"empresa\" required [(ngModel)]=\"empresa\">\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerInicio\" name=\"fechaIni\" placeholder=\"Selecciona fecha de inicio\" required [(ngModel)]=\"fechaInicio\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicio></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerFin\" name=\"fechaFin\" placeholder=\"Selecciona fecha de fin\" required [(ngModel)]=\"fechaFin\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerFin\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerFin></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <textarea matInput placeholder=\"Actividades\" name=\"actividades\" required [(ngModel)]=\"actividades\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarExperiencia()\">Guardar Experiencia Laboral</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"puesto\">\n            <th mat-header-cell *matHeaderCellDef> Puesto </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.puesto }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"empresa\">\n            <th mat-header-cell *matHeaderCellDef> Empresa </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.empresa }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaIni\">\n            <th mat-header-cell *matHeaderCellDef> Fecha Inicio </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.fechaIni | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaFin\">\n            <th mat-header-cell *matHeaderCellDef> Fecha Fin </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.fechaFin | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"actividades\">\n            <th mat-header-cell *matHeaderCellDef> Actividades </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.actividades }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef> Eliminar </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\n\n@Component({\n  selector: 'app-conocimientos',\n  templateUrl: './conocimientos.component.html',\n  styleUrls: ['./conocimientos.component.scss']\n})\nexport class ConocimientosComponent implements OnInit {\n\n \n  dataSource = new MatTableDataSource<ConocimientoElement>([]);\n  conocimiento: string = '';\n\n  displayedColumns = ['conocimiento', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService) { }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarConocimiento(): void {\n    if (this.conocimiento) {\n      const nuevaExperiencia: ConocimientoElement = {\n        conocimiento: this.conocimiento\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      console.log('dataSource.data después de agregar:', this.dataSource.data);\n      this.dataFormularioService.guardarConocimientos(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.conocimiento = '';\n  }\n\n  eliminarElemento(elemento: ConocimientoElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarConocimientos(this.dataSource.data);\n  }\n}\n\nexport interface ConocimientoElement {\n  conocimiento: string;\n}\n ","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">Conocimientos</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>Conocimiento</mat-label>\n            <input matInput placeholder=\"Conocimiento\" name=\"conocimiento\" required [(ngModel)]=\"conocimiento\">\n          </mat-form-field>\n        </div>\n        \n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarConocimiento()\">Guardar Conocimiento</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"conocimiento\">\n            <th mat-header-cell *matHeaderCellDef> Conocimiento </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.conocimiento }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef> Eliminar </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\n\n@Component({\n  selector: 'app-estudios',\n  templateUrl: './estudios.component.html',\n  styleUrls: ['./estudios.component.scss']\n})\nexport class EstudiosComponent implements OnInit {\n\n  dataSource = new MatTableDataSource<EstudioElement>([]);\n  universidad: string = '';\n  carrera: string = '';\n  generacion: Date | null = null;\n\n  displayedColumns = ['universidad', 'carrera', 'generacion', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService) { }\n\n  ngOnInit(): void {\n  }\n\n  guardarEstudio(): void {\n    if (this.universidad && this.carrera && this.generacion) {\n      const nuevaExperiencia: EstudioElement = {\n        universidad: this.universidad,\n        carrera: this.carrera,\n        generacion: this.generacion\n      };\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      this.dataFormularioService.guardarEstudios(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.universidad = '';\n    this.carrera = '';\n    this.generacion = null;\n  }\n\n  eliminarElemento(elemento: EstudioElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarEstudios(this.dataSource.data);\n  }\n}\n\nexport interface EstudioElement {\n  universidad: string;\n  carrera: string;\n  generacion: Date;\n}\n","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">Estudios cursados</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>Universidad</mat-label>\n            <input matInput placeholder=\"Universidad\" name=\"universidad\" required [(ngModel)]=\"universidad\">\n          </mat-form-field>\n        </div>\n\n        <div class=\"columna\">\n            <mat-form-field class=\"campo\">\n              <mat-label>Carrera</mat-label>\n              <input matInput placeholder=\"Carrera\" name=\"carrera\" required [(ngModel)]=\"carrera\">\n            </mat-form-field>\n          </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerInicio\" name=\"generacion\" placeholder=\"Selecciona fecha de generación\" required [(ngModel)]=\"generacion\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicio></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarEstudio()\">Guardar Estudio</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"universidad\">\n            <th mat-header-cell *matHeaderCellDef> Universidad </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.universidad }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"carrera\">\n            <th mat-header-cell *matHeaderCellDef> Carrera </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.carrera }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"generacion\">\n            <th mat-header-cell *matHeaderCellDef> Fecha Generación </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.generacion | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef> Eliminar </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","export function printDiv2(nombre, apellido, nacionalidad,edad, estudios, conocimientos, experiencias,cursos) {\r\n\r\n    var a = window.open(\"\", \"\", \"height=1000, width=1000\");\r\n    a.document.write(\"<html><body>\");\r\n\r\n    //Encabezado\r\n    a.document\r\n      .write(`<div style=\"display: block; align-items: center; width:1000;\"> <div style=\"display: flex;\r\n          margin: 15px 5px;\">`);\r\n    a.document.write(\r\n        '<img style=\"width: 120;\" src=\"./assets/images/logo.png\" alt=\"logo\">'\r\n    );\r\n    a.document.write(\r\n      '<h3 style=\"flex: 1; text-align: right; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 18px; color: #31DCFE !important; margin-right: 100px;\">Curriculum Vitae</h3>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n\r\n    // CV\r\n    a.document.write('<div style=\"margin-bottom:2%; text-align: left; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-size: 25px; font-family: \\'Franklin Gothic Medium Cond\\';\">Curriculum Vitae</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n\r\n    //SEPARAMIENTO DEL PDF\r\n    a.document.write(\r\n      '<div style=\"display: inline-block; align-items: center; width:100%;\">'\r\n    );\r\n  \r\n  \r\n    // =========== 1. DATOS PERSONALES ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; \">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">DATOS PERSONALES</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n  \r\n    // =========== Apellido y Nombre ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + 'Apellido y nombre: ' + apellido + ' ' + nombre + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== Nacionalidad ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>'  + 'Nacionalidad: ' + nacionalidad + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n    // =========== Edad ============\r\n    a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n    a.document.write('<div style=\"font-weight: bold; flex:6; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + 'Edad: ' + edad + '</label></div>');\r\n    a.document.write(\"</div>\");\r\n\r\n  \r\n\r\n    // =========== ESTUDIOS CURSADOS ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">ESTUDIOS CURSADOS</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n    // Supongamos que estudios es un arreglo de objetos con la estructura { nombreUniversidad, carrera, generacion }\r\n    // Iteramos sobre cada objeto en el arreglo\r\n    estudios.forEach(estudio => {\r\n      // =========== Universidad ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n      a.document.write(`<div style=\"font-weight: bold; flex:5; font-family: \\'Arial\\'; font-size: 18px;\"><label>${estudio.universidad}</label></div>`);\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Carrera ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write(`<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>Carrera:</label></div>`);\r\n      a.document.write(`<div style=\"font-weight: bold; flex:9; font-family: \\'Arial\\'; font-size: 18px;\"><label>${estudio.carrera}</label></div>`);\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Generacion ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write(`<div style=\"flex:2; font-family: \\'Arial\\'; font-size: 18px;\"><label>Generación:</label></div>`);\r\n      a.document.write(`<div style=\"font-weight: bold; flex:8; font-family: 'Arial'; font-size: 18px;\"><label>${estudio.generacion.getFullYear()}</label></div>`);\r\n      a.document.write(\"</div>\");\r\n    });\r\n\r\n\r\n    // =========== CONOCIMIENTOS ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">CONOCIMIENTOS</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n    // Iteramos sobre cada objeto en el arreglo\r\n    conocimientos.forEach(conocimiento => {\r\n        // =========== Conocimiento ============\r\n        a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n        a.document.write('<div style=\"font-family: \\'Arial\\'; font-size: 18px; margin-right: 10px;\"><label>•</label></div>');\r\n        a.document.write(`<div style=\"flex:5; font-family: \\'Arial\\'; font-size: 18px;\"><label>${conocimiento.conocimiento}</label></div>`);\r\n        a.document.write(\"</div>\");\r\n    });\r\n  \r\n\r\n    // =========== EXPERIENCIA LAB ============\r\n    a.document.write(\r\n      '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n    );\r\n    a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n    a.document.write(\r\n      '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">EXPERIENCIA LABORAL</label>'\r\n    );\r\n    a.document.write(\"</div>\");\r\n    a.document.write(\"</div>\");\r\n\r\n    function capitalizarPrimeraLetra(cadena) {\r\n      return cadena.charAt(0).toUpperCase() + cadena.slice(1);\r\n    }\r\n\r\n    // Iteramos sobre cada objeto en el arreglo\r\n    experiencias.forEach(experiencia => {\r\n      // =========== Puesto ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n      a.document.write('<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>Puesto:</label></div>');\r\n      a.document.write('<div style=\"font-weight: bold; flex: 9; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + experiencia.puesto + '</label></div>');\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Empresa ============\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write('<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>Empresa:</label></div>');\r\n      a.document.write('<div style=\"font-weight: bold; flex:9; font-family: \\'Arial\\'; font-size: 18px;\"><label>' + experiencia.empresa + '</label></div>');\r\n      a.document.write(\"</div>\");\r\n\r\n      // =========== Tiempo ============\r\n      // Convertir las fechas a objetos de fecha JavaScri\r\n      \r\n      const fechaInicio = new Date(experiencia.fechaIni);\r\n      const fechaFin = new Date(experiencia.fechaFin);\r\n\r\n      // Extraer el mes y el año de cada fecha\r\n      const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n      const añoInicio = fechaInicio.getFullYear();\r\n      const mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n      const añoFin = fechaFin.getFullYear();\r\n\r\n      // Construir la cadena de tiempo formateada\r\n      const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n\r\n      // Escribir en el documento\r\n      a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n      a.document.write('<div style=\"flex:1; font-family: \\'Arial\\'; font-size: 18px;\"><label>Fecha:</label></div>');\r\n      a.document.write(`<div style=\"font-weight: bold; flex:9; font-family: \\'Arial\\'; font-size: 18px;\"><label>${tiempoFormateado}</label></div>`);\r\n      a.document.write(\"</div>\");\r\n\r\n\r\n      // =========== Actividades ============\r\n      a.document.write('<div style=\"font-weight: bold; font-family: \\'Arial\\'; font-size: 18px; margin-bottom: 5px; margin-top: 10px;\"><label>Actividades:</label></div>');\r\n      a.document.write('<div style=\"font-family: \\'Arial\\'; font-size: 18px; margin-bottom: 10px;\">');\r\n      a.document.write(`<label>${experiencia.actividades}</label>`);\r\n      a.document.write(\"</div>\");\r\n      \r\n      a.document.write(\"</div>\");\r\n    });\r\n\r\n\r\n    // Verificar si hay cursos antes de escribir el contenido\r\n    if (cursos.length > 0) {\r\n      // =========== CURSOS ============\r\n      a.document.write(\r\n          '<div style=\"display: flex; border-bottom: 1px solid black;\">'\r\n      );\r\n      a.document.write('<div style=\"display: flex; margin-top:3%;\">');\r\n      a.document.write(\r\n          '<label style=\"font-weight: bold; font-family: \\'Franklin Gothic Medium Cond\\'; font-size: 20px; margin-top: 2%; \">CURSOS</label>'\r\n      );\r\n      a.document.write(\"</div>\");\r\n      a.document.write(\"</div>\");\r\n\r\n      // Iteramos sobre cada objeto en el arreglo\r\n      cursos.forEach(curso => {\r\n          // =========== nombre ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 15px;\">');\r\n          a.document.write(`<div style=\"font-weight: bold; flex:6; font-family: \\'Arial\\'; font-size: 18px;\"><label>${curso.nombre}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          // =========== Tiempo ============\r\n          // Convertir las fechas a objetos de fecha JavaScri\r\n          \r\n          const fechaInicio = new Date(curso.fechaIni);\r\n          const fechaFin = new Date(curso.fechaFin);\r\n\r\n          // Extraer el mes y el año de cada fecha\r\n          const mesInicio = capitalizarPrimeraLetra(fechaInicio.toLocaleString('default', { month: 'long' }));\r\n          const añoInicio = fechaInicio.getFullYear();\r\n          const mesFin = capitalizarPrimeraLetra(fechaFin.toLocaleString('default', { month: 'long' }));\r\n          const añoFin = fechaFin.getFullYear();\r\n\r\n          // Construir la cadena de tiempo formateada\r\n          const tiempoFormateado = `${mesInicio} ${añoInicio} - ${mesFin} ${añoFin}`;\r\n\r\n          // =========== organizacion ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n          a.document.write(`<div style=\"font-weight: bold; flex:2; font-family: \\'Arial\\'; font-size: 18px;\"><label>${curso.organizacion}</label></div>`);\r\n          a.document.write(`<div style=\"font-weight: bold; flex:8; font-family: \\'Arial\\'; font-size: 18px;\"><label>${tiempoFormateado}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          // =========== descripcion ============\r\n          a.document.write('<div style=\"display: flex; margin-top: 10px;\">');\r\n          a.document.write(`<div style=\"flex:10; font-family: \\'Arial\\'; font-size: 18px;\"><label>${curso.descripcion}</label></div>`);\r\n          a.document.write(\"</div>\");\r\n\r\n          a.document.write(\"</div>\");\r\n      });\r\n    }\r\n   \r\n    a.document.write(\"</body></html>\");\r\n\r\n    \r\n    a.document.close();\r\n    a.print();\r\n  }\r\n  ","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-formulario',\n  templateUrl: './formulario.component.html',\n  styleUrls: ['./formulario.component.scss']\n})\nexport class FormularioComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"formulario-container\">\n    <app-personal></app-personal>\n</div>\n<div class=\"formulario-container\">\n    <app-estudios></app-estudios>\n</div>\n<div class=\"formulario-container\">\n    <app-conocimientos></app-conocimientos>\n</div>\n<div class=\"formulario-container\">\n    <app-experiencia></app-experiencia>\n</div>\n<div class=\"formulario-container\">\n    <app-cursos></app-cursos>\n</div>","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","<app-navigation></app-navigation>\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { NavigationComponent } from './navigation/navigation.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { FormularioComponent } from './formulario/formulario.component';\nimport { PersonalComponent } from './personal/personal.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport {MatInputModule} from '@angular/material/input';\nimport { ExperienciaComponent } from './experiencia/experiencia.component';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\nimport { FormsModule } from '@angular/forms';\nimport { EstudiosComponent } from './estudios/estudios.component';\nimport { ConocimientosComponent } from './conocimientos/conocimientos.component';\nimport { CursosComponent } from './cursos/cursos.component';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavigationComponent,\n    FormularioComponent,\n    PersonalComponent,\n    ExperienciaComponent,\n    EstudiosComponent,\n    ConocimientosComponent,\n    CursosComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatTableModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-navigation',\n  templateUrl: './navigation.component.html',\n  styleUrls: ['./navigation.component.scss']\n})\nexport class NavigationComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n      [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n      [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n      [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>Menu</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item href=\"/formulario\">Formulario</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span>CV</span>\n    </mat-toolbar>\n    <!-- Add Content Here -->\n    <router-outlet></router-outlet>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Injectable } from '@angular/core';\n// @ts-ignore\nimport * as Print from '../assets/js/print.js';\nimport { EstudioElement } from './models/estudios.interface';\nimport { PeriodicElement } from './models/experiencias.interface';\nimport { ConocimientoElement } from './models/conocimientos.interface';\nimport { CursoElement } from './models/cursos.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataFormularioService {\n  nombre: string = '';\n  apellidos: string = '';\n  nacionalidad: string = '';\n  edad: number = 18;\n  estudios: EstudioElement[] = [];\n  conocimientos: ConocimientoElement[] = [];\n  experiencias: PeriodicElement[] = [];\n  cursos: CursoElement[] = [];\n\n  // Variables para indicar si los arreglos tienen elementos\n  tieneEstudios: boolean = false;\n  tieneConocimientos: boolean = false;\n  tieneExperiencias: boolean = false;\n  tieneCursos: boolean = false;\n\n  constructor() { }\n\n  guardarDatos(nombre: string, apellidos: string, nacionalidad: string, edad: number) {\n    this.nombre = nombre;\n    this.apellidos = apellidos;\n    this.nacionalidad = nacionalidad;\n    this.edad = edad;\n    this.actualizarEstadoArreglos();\n    Print.printDiv2(this.nombre, this.apellidos, this.nacionalidad, this.edad, this.estudios, this.conocimientos, this.experiencias, this.cursos);\n  }\n\n  guardarEstudios(estudios: EstudioElement[]) {\n    this.estudios = estudios;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarConocimientos(conocimientos: ConocimientoElement[]) {\n    this.conocimientos = conocimientos;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarExperiencias(experiencias: PeriodicElement[]) {\n    this.experiencias = experiencias;\n    this.actualizarEstadoArreglos();\n  }\n\n  guardarCursos(cursos: CursoElement[]) {\n    this.cursos = cursos;\n    this.actualizarEstadoArreglos();\n  }\n\n  private actualizarEstadoArreglos() {\n    this.tieneEstudios = this.estudios.length > 0;\n    this.tieneConocimientos = this.conocimientos.length > 0;\n    this.tieneExperiencias = this.experiencias.length > 0;\n    this.tieneCursos = this.cursos.length > 0;\n  }\n}\n","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { DataFormularioService } from '../data-formulario.service';\n\n@Component({\n  selector: 'app-personal',\n  templateUrl: './personal.component.html',\n  styleUrls: ['./personal.component.scss']\n})\nexport class PersonalComponent {\n  constructor(private dataFormularioService: DataFormularioService) { }\n\n  nombre: string = '';\n  apellidos: string = '';\n  nacionalidad: string = '';\n  edad: number = 18;\n  plantillaHTML: string = '';\n\n  enviarDatos() {\n    this.dataFormularioService.guardarDatos(this.nombre, this.apellidos, this.nacionalidad, this.edad);\n  }\n\n  todosArreglosLlenos(): boolean {\n    return this.dataFormularioService.tieneEstudios &&\n           this.dataFormularioService.tieneConocimientos &&\n           this.dataFormularioService.tieneExperiencias\n  }\n  \n\n}","<div class=\"formulario-container\">\n  <h2 class=\"titulo\">Datos Personales</h2>\n  <form class=\"formulario\" (ngSubmit)=\"enviarDatos()\">\n    <div class=\"fila\">\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>Nombre</mat-label>\n          <input matInput placeholder=\"Nombre\" required [(ngModel)]=\"nombre\" name=\"nombre\">\n        </mat-form-field>\n      </div>\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>Apellidos</mat-label>\n          <input matInput placeholder=\"Apellidos\" required [(ngModel)]=\"apellidos\" name=\"apellidos\">\n        </mat-form-field>\n      </div>\n    </div>\n    <div class=\"fila\">\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>Nacionalidad</mat-label>\n          <input matInput placeholder=\"Nacionalidad\" required [(ngModel)]=\"nacionalidad\" name=\"nacionalidad\">\n        </mat-form-field>\n      </div>\n      <div class=\"columna\">\n        <mat-form-field class=\"campo\">\n          <mat-label>Edad</mat-label>\n          <input matInput placeholder=\"Edad\" type=\"number\" min=\"18\" required [(ngModel)]=\"edad\" name=\"edad\">\n        </mat-form-field>\n      </div>\n    </div>\n    <button mat-raised-button color=\"primary\" class=\"boton\"  [disabled]=\"!todosArreglosLlenos()\" type=\"submit\">Generar documento</button>\n  </form>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { FormularioComponent } from './formulario/formulario.component';\n\nconst routes: Routes = [\n  { path: '', component: FormularioComponent },\n  { path: 'formulario', component: FormularioComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DataFormularioService } from '../data-formulario.service';\n\n@Component({\n  selector: 'app-cursos',\n  templateUrl: './cursos.component.html',\n  styleUrls: ['./cursos.component.scss']\n})\nexport class CursosComponent implements OnInit {\n\n \n  dataSource = new MatTableDataSource<CursoElement>([]);\n  nombre: string = '';\n  organizacion: string = '';\n  fechaIni: Date | null = null;\n  fechaFin: Date | null = null;\n  descripcion: string = '';\n\n  displayedColumns = ['nombre', 'organizacion', 'fechaIni','fechaFin','descripcion', 'eliminar'];\n\n  constructor(private dataFormularioService: DataFormularioService) { }\n\n  ngOnInit(): void {\n    console.log('displayedColumns:', this.displayedColumns);\n    console.log('dataSource.data:', this.dataSource.data);\n  }\n\n  guardarCurso(): void {\n    if (this.nombre && this.organizacion && this.fechaIni && this.fechaFin && this.descripcion) {\n      const nuevaExperiencia: CursoElement = {\n        nombre: this.nombre,\n        organizacion: this.organizacion,\n        fechaIni: this.fechaIni,\n        fechaFin: this.fechaFin,\n        descripcion: this.descripcion\n      };\n\n      console.log('Nuevo elemento a agregar:', nuevaExperiencia);\n\n      this.dataSource.data.push(nuevaExperiencia);\n      this.dataSource.data = [...this.dataSource.data]; \n\n      console.log('dataSource.data después de agregar:', this.dataSource.data);\n      this.dataFormularioService.guardarCursos(this.dataSource.data);\n      this.resetFormulario();\n    } else {\n      alert('Por favor completa todos los campos.');\n    }\n  }\n\n  resetFormulario(): void {\n    this.nombre = '';\n    this.organizacion = '';\n    this.fechaIni = null;\n    this.fechaFin = null;\n    this.descripcion = '';\n  }\n\n  eliminarElemento(elemento: CursoElement): void {\n    this.dataSource.data = this.dataSource.data.filter(item => item !== elemento);\n    this.dataFormularioService.guardarCursos(this.dataSource.data);\n  }\n}\n\nexport interface CursoElement {\n  nombre: string;\n  organizacion: string;\n  fechaIni: Date;\n  fechaFin: Date;\n  descripcion: string;\n}\n ","<div class=\"formulario-container\">\n    <h2 class=\"titulo\">Cursos</h2>\n    <form class=\"formulario\">\n      <div class=\"fila\">\n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>Nombre</mat-label>\n            <input matInput placeholder=\"Nombre\" name=\"nombre\" required [(ngModel)]=\"nombre\">\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <mat-label>Organizacion</mat-label>\n            <input matInput placeholder=\"Organizacion\" name=\"organizacion\" required [(ngModel)]=\"organizacion\">\n          </mat-form-field>\n        </div>\n  \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerInicio\" name=\"fechaIni\" placeholder=\"Selecciona fecha de inicio\" required [(ngModel)]=\"fechaIni\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerInicio\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerInicio></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <input matInput [matDatepicker]=\"pickerFin\" name=\"fechaFin\" placeholder=\"Selecciona fecha de fin\" required [(ngModel)]=\"fechaFin\">\n            <mat-datepicker-toggle matSuffix [for]=\"pickerFin\"></mat-datepicker-toggle>\n            <mat-datepicker #pickerFin></mat-datepicker>\n          </mat-form-field>\n        </div>\n        \n        <div class=\"columna\">\n          <mat-form-field class=\"campo\">\n            <textarea matInput placeholder=\"Descripción\" name=\"descripcion\" required [(ngModel)]=\"descripcion\"></textarea>\n          </mat-form-field>\n        </div>\n      </div>\n  \n      <button mat-raised-button color=\"primary\" class=\"boton\" (click)=\"guardarCurso()\">Guardar Curso</button>\n    </form>\n  \n    <div class=\"example-container mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n      \n          <!-- Definición de las columnas -->\n          <ng-container matColumnDef=\"nombre\">\n            <th mat-header-cell *matHeaderCellDef> Nombre </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.nombre }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"organizacion\">\n            <th mat-header-cell *matHeaderCellDef> Organización </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.organizacion }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaIni\">\n            <th mat-header-cell *matHeaderCellDef> Fecha Inicio </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.fechaIni | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"fechaFin\">\n            <th mat-header-cell *matHeaderCellDef> Fecha Fin </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.fechaFin | date:'dd-MM-yyyy' }} </td>\n          </ng-container>\n      \n          <ng-container matColumnDef=\"descripcion\">\n            <th mat-header-cell *matHeaderCellDef> Descripción </th>\n            <td mat-cell *matCellDef=\"let element\"> {{ element.descripcion }} </td>\n          </ng-container>\n      \n          <!-- Columna para el botón de eliminar -->\n          <ng-container matColumnDef=\"eliminar\">\n            <th mat-header-cell *matHeaderCellDef> Eliminar </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <button mat-icon-button color=\"warn\" (click)=\"eliminarElemento(element)\">\n                <mat-icon>delete</mat-icon>\n              </button>\n            </td>\n          </ng-container>\n      \n          <!-- Definir el orden de las columnas -->\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n      </div>    \n</div>\n  ","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}